"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[130],{3905:(a,e,t)=>{t.d(e,{Zo:()=>l,kt:()=>c});var n=t(7294);function m(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function r(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function p(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){m(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function s(a,e){if(null==a)return{};var t,n,m=function(a,e){if(null==a)return{};var t,n,m={},r=Object.keys(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||(m[t]=a[t]);return m}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(m[t]=a[t])}return m}var o=n.createContext({}),i=function(a){var e=n.useContext(o),t=e;return a&&(t="function"==typeof a?a(e):p(p({},e),a)),t},l=function(a){var e=i(a.components);return n.createElement(o.Provider,{value:e},a.children)},N="mdxType",d={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(a,e){var t=a.components,m=a.mdxType,r=a.originalType,o=a.parentName,l=s(a,["components","mdxType","originalType","parentName"]),N=i(t),k=m,c=N["".concat(o,".").concat(k)]||N[k]||d[k]||r;return t?n.createElement(c,p(p({ref:e},l),{},{components:t})):n.createElement(c,p({ref:e},l))}));function c(a,e){var t=arguments,m=e&&e.mdxType;if("string"==typeof a||m){var r=t.length,p=new Array(r);p[0]=k;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=a,s[N]="string"==typeof a?a:m,p[1]=s;for(var i=2;i<r;i++)p[i]=t[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},121:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>p,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>i});var n=t(7462),m=(t(7294),t(3905));const r={},p="Embedding",s={unversionedId:"modules/Embedding",id:"modules/Embedding",title:"Embedding",description:"Embedding\u6a21\u5757\u4f7f\u7528rocksdb\u6765\u78c1\u76d8\u6765\u5b58\u50a8Embedding\u7684\u503c, \u91c7\u7528KV\u7684\u65b9\u5f0f\u3002 \u5176\u4e2dKey\u662f\u7279\u5f81hash\u7684\u503c(uint64\u7c7b\u578b), Value\u662fEmbedding\u5bf9\u5e94\u7684\u6d6e\u70b9\u6570\u5217\u8868\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u7684\u503c\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/modules/Embedding.md",sourceDirName:"modules",slug:"/modules/Embedding",permalink:"/damo-embedding/zh-Hans/docs/modules/Embedding",draft:!1,editUrl:"https://github.com/uopensail/damo-embedding/edit/docs/docs/docs/modules/Embedding.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Counting Bloom Filter",permalink:"/damo-embedding/zh-Hans/docs/modules/CBF"},next:{title:"Initializer",permalink:"/damo-embedding/zh-Hans/docs/modules/Initializer"}},o={},i=[{value:"Key",id:"key",level:2},{value:"Group",id:"group",level:2},{value:"Value",id:"value",level:2},{value:"TTL",id:"ttl",level:4},{value:"Usage",id:"usage",level:2},{value:"How to Create an Embedding",id:"how-to-create-an-embedding",level:3},{value:"Member Functions of Embedding",id:"member-functions-of-embedding",level:3},{value:"lookup: pull weight from embedding",id:"lookup-pull-weight-from-embedding",level:4},{value:"apply_gradients: push gradients to embedding",id:"apply_gradients-push-gradients-to-embedding",level:4}],l={toc:i},N="wrapper";function d(a){let{components:e,...t}=a;return(0,m.kt)(N,(0,n.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"embedding"},"Embedding"),(0,m.kt)("p",null,"Embedding\u6a21\u5757\u4f7f\u7528rocksdb\u6765\u78c1\u76d8\u6765\u5b58\u50a8Embedding\u7684\u503c, \u91c7\u7528KV\u7684\u65b9\u5f0f\u3002 \u5176\u4e2dKey\u662f\u7279\u5f81hash\u7684\u503c(uint64\u7c7b\u578b), Value\u662fEmbedding\u5bf9\u5e94\u7684\u6d6e\u70b9\u6570\u5217\u8868\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u7684\u503c\u3002"),(0,m.kt)("h2",{id:"key"},"Key"),(0,m.kt)("p",null,"\u6240\u6709\u7684\u7279\u5f81\u90fd\u662f\u7ecf\u8fc7\u79bb\u6563\u5316\u7684, \u7528\u552f\u4e00\u7684uint64\u7684\u503c\u8fdb\u884c\u8868\u793a\u3002\u540c\u4e00\u7c7b\u7279\u5f81\u7528\u76f8\u540c\u7684\u7279\u5f81\u7ec4(group)\u6765\u7ba1\u7406\u3002\u5728rocksdb\u4e2d\u4f7f\u7528uint64\u8fd9\u4e2a\u503c\u6765\u8fdb\u884c\u67e5\u8be2\u3002"),(0,m.kt)("h2",{id:"group"},"Group"),(0,m.kt)("p",null,"\u8fd9\u91cc\u4f1a\u5c06\u7279\u5f81\u5206\u6210\u4e0d\u540c\u7684group, \u4e0d\u540c\u7684group\u53ef\u4ee5\u8bbe\u7f6e\u4e0d\u540c\u7684\u5bbd\u5ea6, \u4e0d\u540c\u7684\u521d\u59cb\u5316\u7b97\u5b50\u548c\u4f18\u5316\u7b97\u5b50\u3002"),(0,m.kt)("h2",{id:"value"},"Value"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c++"},"struct MetaData {\n    int group; \n    u_int64_t key;     // original key, not group-masked key\n    u_int64_t update_time;\n    u_int64_t update_num;\n    float data[];\n};\n")),(0,m.kt)("h4",{id:"ttl"},"TTL"),(0,m.kt)("p",null,"\u5bf9\u4e8e\u4e00\u4e9b\u957f\u65f6\u95f4\u6ca1\u6709\u66f4\u65b0\u7684\u7279\u5f81, \u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eTTL\u7684\u65b9\u5f0f\u5c06\u5176\u5220\u9664, \u8fd9\u4e2a\u662frocksdb\u81ea\u8eab\u652f\u6301\u7684\u529f\u80fd\u3002\u8fd9\u6837\u505a\u4e5f\u662f\u4e3a\u4e86\u964d\u4f4e\u6a21\u578b\u7684\u5927\u5c0f\u3002"),(0,m.kt)("h2",{id:"usage"},"Usage"),(0,m.kt)("h3",{id:"how-to-create-an-embedding"},"How to Create an Embedding"),(0,m.kt)("p",null,"The arguments are listed below:"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"storage"),": damo.PyStorage type")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"optimizer"),": damo.PyOptimizer type")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"initializer"),": damo.PyInitializer type")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"dimension"),": int type, dim of embedding")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"group"),": int type, [0, 256), defaul: 0"))),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-python"},"import damo\nstorage = damo.PyStorage(...)\noptimizer = damo.PyOptimizer(...)\ninitializer = damo.PyInitializer(...)\ndimension = 16\ngroup = 1\nembedding = damo.PyEmbedding(storage, optimizer, initializer, dimension, group)\n")),(0,m.kt)("h3",{id:"member-functions-of-embedding"},"Member Functions of Embedding"),(0,m.kt)("p",null,"There are two member functions of embedding, both have no return values, which are listed below:"),(0,m.kt)("h4",{id:"lookup-pull-weight-from-embedding"},"lookup: pull weight from embedding"),(0,m.kt)("p",null,"The arguments are listed below:"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"keys: numpy.ndarray type, one dimension, dtype MUST BE np.uint64")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"weights: numpy.ndarray type, one dimension"),(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"dtype MUST BE np.float32")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"z"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mi",{parentName:"mrow"},"b"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"g"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"_"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"h"),(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mi",{parentName:"mrow"},"p"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mn",{parentName:"mrow"},"0"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"size == embedding\\_dimension * keys.shape[0]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6595em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"ze"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"=="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0044em",verticalAlign:"-0.31em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"mb"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"dd"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"in"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,m.kt)("span",{parentName:"span",className:"mord",style:{marginRight:"0.02778em"}},"_"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"im"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"eys"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"ha"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]")))))))),(0,m.kt)("p",{parentName:"li"},"We will store the result in this space. "))),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\n\n# example\nn = 8\nkeys = np.zeros(n).astype(np.uint64)\nfor i in range(n):\n    keys[i] = i+1\n\n# array([1, 2, 3, 4, 5, 6, 7, 8], dtype=uint64)\n\nweight = np.zeros(n*dimension).astype(np.float32)\n\nembedding.lookup(keys, weight)\n\n# IT IS Easy To Extract Each Key's Weight\ntmp = weight.reshape((n, dimension))\nweight_dict = {k: v for k,v in zip(keys, tmp)}\n")),(0,m.kt)("h4",{id:"apply_gradients-push-gradients-to-embedding"},"apply_gradients: push gradients to embedding"),(0,m.kt)("p",null,"The arguments are listed below:"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"keys: same as lookup, numpy.ndarray type, one dimension, dtype MUST BE np.uint64")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"gradients: numpy.ndarray type, one dimension, dtype MUST BE np.float32 type, "),(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"dtype MUST BE np.float32")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"z"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mi",{parentName:"mrow"},"b"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"g"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"_"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"h"),(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mi",{parentName:"mrow"},"p"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mn",{parentName:"mrow"},"0"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"size == embedding\\_dimension * keys.shape[0]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6595em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"ze"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"=="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0044em",verticalAlign:"-0.31em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"mb"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"dd"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"in"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,m.kt)("span",{parentName:"span",className:"mord",style:{marginRight:"0.02778em"}},"_"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"im"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"eys"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"ha"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]")))))))))),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\n\ngradients = np.random.random(n*dimension).astype(np.float32)\n\nembedding.apply_gradients(keys, gradients)\n")))}d.isMDXComponent=!0}}]);