"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[246],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),d=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(m.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(n),c=r,f=u["".concat(m,".").concat(c)]||u[c]||s[c]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6932:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const o={},i="Initializer",l={unversionedId:"modules/Initializer",id:"modules/Initializer",title:"Initializer",description:"When using an initializer, you need to configure the name item to indicate which initializer to use, and then configure their respective parameters according to different initializer. The following are the names of each initializer.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/modules/Initializer.md",sourceDirName:"modules",slug:"/modules/Initializer",permalink:"/damo-embedding/zh-Hans/docs/modules/Initializer",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/modules/Initializer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Embedding",permalink:"/damo-embedding/zh-Hans/docs/modules/Embedding"},next:{title:"Intro",permalink:"/damo-embedding/zh-Hans/docs/modules/Intro"}},m={},d=[{value:"Zeros",id:"zeros",level:4},{value:"Ones",id:"ones",level:4},{value:"RandomUniform",id:"randomuniform",level:4},{value:"RandomNormal",id:"randomnormal",level:4},{value:"TruncateNormal",id:"truncatenormal",level:4},{value:"Example",id:"example",level:3}],p={toc:d},u="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"initializer"},"Initializer"),(0,r.kt)("p",null,"When using an initializer, you need to configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," item to indicate which initializer to use, and then configure their respective parameters according to different initializer. The following are the names of each initializer."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Initializer"),(0,r.kt)("th",{parentName:"tr",align:"center"},"name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Zeros"),(0,r.kt)("td",{parentName:"tr",align:"center"},"zeros")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Ones"),(0,r.kt)("td",{parentName:"tr",align:"center"},"ones")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"RandomUniform"),(0,r.kt)("td",{parentName:"tr",align:"center"},"random_uniform")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"RandomNormal"),(0,r.kt)("td",{parentName:"tr",align:"center"},"random_normal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"TruncateNormal"),(0,r.kt)("td",{parentName:"tr",align:"center"},"truncate_normal")))),(0,r.kt)("h4",{id:"zeros"},"Zeros"),(0,r.kt)("p",null,"All values Are setted to 0."),(0,r.kt)("h4",{id:"ones"},"Ones"),(0,r.kt)("p",null,"All values Are setted to 1."),(0,r.kt)("h4",{id:"randomuniform"},"RandomUniform"),(0,r.kt)("p",null,"uniform distribution, configure the following parameters:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"min: low bound value, float type, default: -1.0"),(0,r.kt)("li",{parentName:"ol"},"max: up bound value, float type, default: 1.0")),(0,r.kt)("h4",{id:"randomnormal"},"RandomNormal"),(0,r.kt)("p",null,"stochastic normal distribution, configure the following parameters:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"mean: mean value, float type, default: 0.0"),(0,r.kt)("li",{parentName:"ol"},"stddev: standard deviation, float type, default: 1.0")),(0,r.kt)("h4",{id:"truncatenormal"},"TruncateNormal"),(0,r.kt)("p",null,"stochastic normal distribution, if the generated value exceeds 2 standard deviations, it is discarded and regenerate, configure the following parameters:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"mean: mean value, float type, default: 0.0"),(0,r.kt)("li",{parentName:"ol"},"stddev: standard deviation,  float type, default: 1.0")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import damo\nimport numpy as np\n\n# zero\nparam = damo.Parameters()\nparam.insert("name", "zeros")\n# must be float32\nvalue = np.random.random(10).astype(np.float32)\nobj = damo.PyInitializer(param)\nobj.call(value)\nprint("zeros: ", value)\n\n# ones\nparam = damo.Parameters()\nparam.insert("name", "ones")\n# must be float32\nvalue = np.random.random(10).astype(np.float32)\nobj = damo.PyInitializer(param)\nobj.call(value)\nprint("ones: ", value)\n\n# random_uniform\nparam = damo.Parameters()\nparam.insert("name", "random_uniform")\nparam.insert("min", -1.0)\nparam.insert("max", 1.0)\n# must be float32\nvalue = np.random.random(10).astype(np.float32)\nobj = damo.PyInitializer(param)\nobj.call(value)\nprint("random_uniform: ", value)\n\n# random_normal\nparam = damo.Parameters()\nparam.insert("name", "random_normal")\nparam.insert("mean", 0.0)\nparam.insert("stddev", 1.0)\n# must be float32\nvalue = np.random.random(10).astype(np.float32)\nobj = damo.PyInitializer(param)\nobj.call(value)\nprint("random_normal: ", value)\n\n# truncate_normal\nparam = damo.Parameters()\nparam.insert("name", "truncate_normal")\nparam.insert("mean", 0.0)\nparam.insert("stddev", 1.0)\n# must be float32\nvalue = np.random.random(10).astype(np.float32)\nobj = damo.PyInitializer(param)\nobj.call(value)\nprint("truncate_normal: ", value)\n')))}s.isMDXComponent=!0}}]);