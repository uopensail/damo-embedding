name: Build and upload to PyPI

on:
  release:
    types: [published]
  push:
    tags:
      - '*'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-latest, macos-latest]
        #os: [ubuntu-latest]
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set CIBW_ENVIRONMENT
        run: |
          if [[ "${{ github.event_name }}" == 'push' && "${{ github.ref }}" == 'refs/tags/'*  ]]; then
            echo "Setting CIBW_ENVIRONMENT_DEBUG for 1"
            echo "CIBW_ENVIRONMENT_DEBUG=1" >> $GITHUB_ENV
          else
            echo "Setting CIBW_ENVIRONMENT_DEBUG for 0"
            echo "CIBW_ENVIRONMENT_DEBUG=0" >> $GITHUB_ENV
          fi
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.0
        env:
          CIBW_ENVIRONMENT: DEBUG=${{ env.CIBW_ENVIRONMENT_DEBUG }}
          CIBW_BEFORE_ALL_MACOS: >
            brew install rocksdb
          CIBW_BEFORE_ALL_LINUX: >
            cmake --version &&
            yum install -y python3-devel python-devel &&
            strip /usr/local/lib/librocksdb.so
          CIBW_BEFORE_BUILD: >
            pip install pybind11 ninja
          CIBW_BEFORE_BUILD_MACOS: >
            brew install rocksdb && pip install pybind11 ninja
          CIBW_ARCHS_LINUX: auto, aarch64 

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
          
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        if: github.event_name == 'release' && github.event.action == 'published'
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
